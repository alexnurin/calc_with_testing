Магические методы: 1. Реализовать для класса Calculator следующие магические методы: сложение, вычитание, деление, умножение, возведение в степень. Должно работать как с числами, так и с объектами Calculator 2. Ввести ограничение на количество задаваемых атрибутов, которое по умолчанию равно 10, но можно задать в конструкторе. 3. При печатании объекта нужно выводить все его атрибуты (можно использовать поле dict) 4. При попытке итерироваться по объекту Calculator нужно всегда возвращать значение поля value

Стандартная библиотека: 1. Написать код, который помогает выяснить на каких размерах словарь перевыделяет память 2. Написать функцию, которая для полученного текста возвращает самое популярное слово, самую популярную букву и среднее количество вхождений буквы в слово. 3. Написать функцию, которая принимает на вход алфавит и выдаёт все палиндром этого алфавита не больше указанной длины.

Я думал, что моя форма для фидбэка подразумевает, что мне на почту будут приходить ответы, но я ошибся.
Короче, только сейчас добрался заглянуть туда
Получил вот такой фидбэк
Я сожалею, что у кого-то курс вызвал подобные чувства.
Есть хорошие и плохие новости.
Хорошие: реальное программирование что-то такое и подразумевает. Вам нужно наговнякать хоть что-то, что будет работать, и делать это нужно быстро. Если у вас будет навык быстро находить какие-то вещи в интернете и применять это в работе (простой copy—paste чаще всего не работает), то это вам сильно пригодится в работе.
Плохие новости: да, действительно, понимание наступает чуть позже, чем если бы мы разжёвывали каждую тему долго и просто. И да, иногда это вызывает раздражение, усталость и печаль.
Тут ещё такое дело: есть некоторая утверждённая программа, по которой я должен вас вести, менять её мне не дадут, я сам предполагал, что курс будет длиться весь семестр, а не половину. Моя свобода в том, как подробно я могу давать вам материал и как много уделять вам свободное время. Собственно, в последнем кроется суть: когда вам что-то непонятно, вы можете у меня спрашивать. Учитесь тому, что если вам что-то непонятно, вы можете спрашивать препода вещи. 99,9% (в моём случае 99,99%), что он вас в ответ не ударит и чморить не будет. Более того, есть сценарий, когда несколько человек понимают, что у них есть большой общий пробел, который самим тяжело разгрести, тогда они могут мне написать, и я это разжую либо на паре, либо дам классный материал, либо ещё как-то.
Короче, не стесняйтесь использовать рот не только для приёма пищи, но и для произношения слов через него.
И да, пожалуйста, если что-то не так, пишите мне об этом сразу, я правда постараюсь помочь чем смогу (в рамках разумного, конечно же)

Неужели так сложно писать комментарии?
А маленький документик с инструкцией как запускать программу?
Вы понимаете, что вы пишете вообще-то не очень одинаковый код? Чтобы понять что ваша программа вообще может, мне нужно детально вчитываться в код, на это уходит масса времени. Вместо того, чтобы проверить заявленное соответственному, я должен сам догадываться, что делает ваш код, на это уходит масса времени.
Мне, конечно, совсем не влом всё это проверять, но вы тогда получите ревью где-нибудь в октябре, фиксить свои проблемы вам придётся мне в целом всё равно когда.
Писал о PEP8 ещё неделю назад, сказал на паре что буду снижать баллы за говнокод, и что я вижу? Всем пофиг. Ну ок, давайте я просто не буду проверять работы, в которых нет комментариев и документации.
Даже если ваш код занимает 20 строк, нужно всё равно потратить время на то, чтобы вникнуть что он делает и может, и это существенно больше времени, чем просто прочесть комментарии и документацию.